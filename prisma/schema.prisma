// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Waitlist {
  id                    String    @id @default(uuid()) @db.Uuid
  firstName             String
  lastName              String
  email                 String    @unique
  zipCode               String
  phoneNumber           String?
  monthlyMortgageAmount String?
  mortgageOriginator    String?
  maritalStatus         String?
  employmentStatus      String?
  homeType              String?
  referralCode          String?   @unique
  referredBy            String?
  inviteSent            Boolean   @default(false)
  inviteSentAt          DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("WaitList")
}

model User {
  id                String   @id @default(uuid()) @db.Uuid
  name              String?
  email             String   @unique
  emailVerified     Boolean? @default(false)
  password          String?
  first_name        String?
  last_name         String?
  date_of_birth     String  // Stores date in 'YYYY-MM-DD' format string, TP
  phone_number      String?
  address           userAddress[]
  
  citizenship       citizen   @default(US)
  tin               String?

  account           account[]   

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  application_id    String? @unique

  @@map("users")
}

model userAddress {
  id            String     @id @default(uuid()) @db.Uuid
  userId        String     @db.Uuid
  address_type  addr_type  @default(Physical)
  street_line_1 String
  street_line_2 String?
  city          String
  state         String
  postal_code   String
  country       String
  user          User     @relation(fields: [userId], references: [id])
  @@unique([userId, address_type])
}

model accountProduct {
  id          String @unique
  description String?
  account     account[]
}
model account {
id                            String @id @unique
userId                        String @db.Uuid
account_product_id            String
primary_person_application_id String
status                        String
ownership_type                String
person_applications           Json

business_application_id       String?
account_id                    String?
product                       String?
account_number                String?
deposit_id                    String?
account_number_reservation_id String?

created_at                    DateTime
updated_at                    DateTime

bankdata                      Json?
userdata                      Json?
accountProduct                accountProduct @relation(fields: [account_product_id], references: [id])
user                          User @relation(fields: [userId], references: [id])
}


enum citizen {
  US
}

enum addr_type {
  Physical
  Mailing
}

